---
import Headline from "@/components/ui/Headline.astro";
import WidgetWrapper from "@/components/ui/WidgetWrapper.astro";
// import Image from "@/components/common/Image.astro";
// import type { Features as Props } from '@/types';
import CustomImage from "@/components/common/CustomImage.astro";
import { cn } from "@/utils/cn";

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  description = await Astro.slots.render("description"),
  tagline = await Astro.slots.render("tagline"),
  image,
  items = [],
  //   columns,
  //   defaultIcon,
  isBeforeContent,
  isAfterContent,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render("bg"),
} = Astro.props;
console.log(" Astro.props", Astro.props);

console.log("container", classes?.headline?.container);
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`${isBeforeContent ? "md:pb-8 lg:pb-12" : ""} ${isAfterContent ? "pt-0 md:pt-0 lg:pt-0" : ""} ${
    classes?.container ?? ""
  }`}
  bg={bg}
>
  <Headline
    title={title}
    subtitle={subtitle}
    tagline={tagline}
    description={description}
    classes={classes?.headline as Record<string, string>}
  />

  <div aria-hidden="true" class="aspect-w-16 aspect-h-7">
    {
      image && (
        <div class="w-full object-cover rounded-xl mx-auto shadow-lg">
          <CustomImage
            class={cn("w-full object-cover rounded-xl mx-auto", image)}
            width={image.width}
            {...image}
          />
        </div>
      )
    }

    <div class="bg-white">
      <div
        class="mx-auto grid max-w-2xl grid-cols-1 items-center gap-x-8 gap-y-8 px-4 py-6 sm:px-6 lg:max-w-7xl lg:grid-cols-2 lg:px-8"
      >
        <div>
          <!-- <Headline
            title={title}
            subtitle={subtitle}
            tagline={tagline}
            description={description}
            classes={cn(classes?.headline as Record<string, string>)}
          /> -->

          <dl
            class="mt-16 grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 sm:gap-y-16 lg:gap-x-8"
          >
            {
              items.map((feature: { title: unknown; description: unknown }) => (
                <Fragment key={feature.title}>
                  <div class="border-t border-gray-200 pt-4">
                    <dt
                      class="font-medium text-gray-900 text-xl"
                      set:html={feature.title}
                    />
                    <dd
                      class="mt-2 text-lg text-gray-500"
                      set:html={feature.description}
                    />
                  </div>
                </Fragment>
              ))
            }
          </dl>
        </div>
        <div class="grid grid-cols-2 grid-rows-2 gap-4 sm:gap-6 lg:gap-8">
          {
            image?.map((img: { src: string; alt: string }) => (
              <CustomImage
                alt={img?.alt}
                src={img?.src}
                class="rounded-lg bg-gray-100"
              />
            ))
          }
        </div>
      </div>
    </div>
  </div>
</WidgetWrapper>

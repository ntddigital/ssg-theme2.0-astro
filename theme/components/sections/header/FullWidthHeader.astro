---
import { Icon } from "astro-icon/components";
import Logo from "@/components/Logo.astro";

import ToggleTheme from "@/components/common/ToggleTheme.astro";
import ToggleMenu from "@/components/common/ToggleMenu.astro";
import Button from "@/components/ui/Button/Button.astro";

import { getHomePermalink } from "@/utils/permalinks";
import { trimSlash } from "@/utils/permalinks";
import type { CallToAction } from "@/types";

import { cn } from "@/utils/cn";

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  actionOnPhone: CallToAction;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  isShowToggleTheme?: boolean;
  isShowRssFeed?: boolean;
  position?: string;
  classes: { [key: string]: string };
}

const {
  id = "header",
  links = [],
  actions = [],
  actionOnPhone,
  isSticky = true,
  isDark = false,
  isFullWidth = true,
  isShowToggleTheme = false,
  // isShowRssFeed = false,
  position = "center",
  classes = {},
} = Astro.props;
const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<nav
  class:list={[
    {
      sticky: isSticky,
      relative: !isSticky,
      "bg-dark dark:bg-transparent dark ": isDark,
      "bg-page lg:bg-transparent": !isDark,
    },
    "top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out",
    classes?.nav,
  ]}
  {...isSticky ? { "data-aw-sticky-header": true } : {}}
  {...id ? { id } : {}}
>
  <div class={cn("absolute inset-0", classes?.container)}></div>
  <div
    class:list={[
      "relative px-3 lg:px-6 py-1 mx-auto w-full",
      {
        "lg:flex lg:justify-between": position !== "center",
      },
      {
        "lg:grid lg:grid-cols-3 lg:items-center": position === "center",
      },
      {
        "max-w-7xl": !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[
        { "mr-auto rtl:mr-0 rtl:ml-auto": position === "right" },
        "flex justify-between items-center",
      ]}
    >
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>

      <div class="flex items-center lg:hidden">
        {
          actionOnPhone && (
            <Button
              {...actionOnPhone}
              class="ml-2 py-2.5 px-5.5 lg:px-6 font-semibold shadow-none text-sm w-auto"
            />
          )
        }
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full lg:w-auto hidden lg:flex lg:mx-5 overflow-y-auto overflow-x-hidden lg:overflow-y-visible lg:overflow-x-auto lg:justify-self-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col lg:flex-row lg:self-center w-full lg:w-auto text-xl lg:text-lg tracking-[0.01rem] font-bold lg:justify-center lg:py-2"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? "dropdown" : ""}>
              {links?.length ? (
                <>
                  <button
                    type="button"
                    class="dark:text-white hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap"
                  >
                    {text}{" "}
                    <Icon
                      name="tabler:chevron-down"
                      class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden lg:inline"
                    />
                  </button>
                  <ul class="dropdown-menu lg:backdrop-blur-md dark:lg:bg-dark rounded lg:absolute pl-4 lg:pl-0 lg:hidden font-medium lg:bg-white/90 lg:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            "dark:text-white first:rounded-t last:rounded-b lg:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap",
                            { "aw-link-active": href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class={cn(
                    "dark:text-white hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap",
                    href === currentPath && "aw-link-active"
                  )}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { "ml-auto rtl:ml-0 rtl:mr-auto": position === "left" },
        "hidden lg:self-center lg:flex items-center lg:mb-0 fixed w-full lg:w-auto lg:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 lg:p-0 lg:justify-self-end",
      ]}
    >
      <div class="items-center flex justify-between w-full lg:w-auto">
        <div class="flex">
          {
            isShowToggleTheme && (
              <ToggleTheme iconClass="w-6 h-6 lg:w-5 lg:h-5 lg:inline-block" />
            )
          }
          <!-- {
            isShowRssFeed && (
              <a
                class="text-muted dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label="RSS Feed"
                href={getAsset("/rss.xml")}
              >
                <Icon name="tabler:rss" class="w-5 h-5" />
              </a>
            )
          } -->
        </div>
        {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map((btnProps) => (
                <Button
                  {...btnProps}
                  class="ml-2 py-2.5 px-5.5 lg:px-6 font-semibold shadow-none text-sm w-auto"
                />
              ))}
            </span>
          ) : (
            ""
          )
        }
      </div>
    </div>
  </div>
</nav>

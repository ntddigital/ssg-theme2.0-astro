---
import { Icon } from "astro-icon/components";
import type { Brands as Props } from "@/types";

import CustomImage from "@/components/common/CustomImage.astro";
import Headline from "@/components/ui/Headline.astro";
import WidgetWrapper from "@/components/ui/WidgetWrapper.astro";
import ItemGrid2 from "@/components/ui/ItemGrid/ItemGrid2.astro";

const {
  title = "",
  subtitle = "",
  description = "",
  tagline = "",
  icons = [],
  images = [],

  items = [],
  columns = 2,
  defaultIcon = "",

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render("bg"),
} = Astro.props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`mx-auto ${classes?.container ?? ""}`}
  bg={bg}
>
  <Headline
    title={title}
    subtitle={subtitle}
    description={description}
    tagline={tagline}
  />

  <div class="flex flex-wrap justify-center gap-x-6 sm:gap-x-12 lg:gap-x-24">
    {
      icons &&
        icons.map((icon) => (
          <Icon
            name={icon}
            class="py-3 lg:py-5 w-12 h-auto mx-auto sm:mx-0 text-gray-500"
          />
        ))
    }
    {
      images &&
        images.map(
          (image) =>
            image.src && (
              <div class="flex justify-center col-span-1 my-2 lg:my-4 py-1 px-3 rounded-md dark:bg-gray-200">
                <CustomImage
                  src={image?.src}
                  alt={image?.alt || ""}
                  width={image?.width}
                />
              </div>
            )
        )
    }
    <ItemGrid2
      items={items}
      columns={columns}
      defaultIcon={defaultIcon}
      classes={{
        container: "gap-4 md:gap-6",
        panel:
          //　dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)]　 dark:bg-slate-900
          "rounded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)]  backdrop-blur border border-[#ffffff29] bg-white p-6",
        // panel:
        //   "text-center bg-page items-center md:text-left rtl:md:text-right md:items-start p-6 p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-800",
        icon: "w-12 h-12 mb-6 text-primary",
        ...((classes?.items as Record<string, never>) ?? {}),
      }}
    />
  </div>
</WidgetWrapper>

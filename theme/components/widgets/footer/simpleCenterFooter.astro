---
import { Icon } from "astro-icon/components";
import { SITE } from "~/config/siteConfig";
import { getHomePermalink } from "@/utils/permalinks";
import { simpleCenterFooterData } from "~/config/navigation";

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface SimpleCenterFooterData {
  links: Link[];
  socialLinks: Array<Link>;
  footNote: string;
  theme?: string;
}

const {
  socialLinks = [],
  links = [],
  footNote = "",
  theme = "",
} = simpleCenterFooterData as SimpleCenterFooterData;
---

<footer
  class:list={[
    { dark: theme === "dark" },
    "relative border-t border-gray-200 dark:border-slate-800 not-prose",
  ]}
>
  <div
    class="dark:bg-dark absolute inset-0 pointer-events-none"
    aria-hidden="true"
  >
  </div>
  <div
    class="relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-white intersect-once intersect-quarter intercept-no-queue motion-safe:md:intersect:animate-fade"
  >
    <div class="grid grid-cols-12 gap-4 gap-y-8 sm:gap-8 py-8 md:py-12">
      <div class="col-span-12 lg:col-span-12">
        <div class="mb-2 text-center">
          <a class="inline-block font-bold text-2xl" href={getHomePermalink()}
            >{SITE?.name}</a
          >
        </div>
      </div>
      <!-- {
        links.map(({ title, links }) => (
          <div class="col-span-6 md:col-span-3 lg:col-span-2">
            <div class="dark:text-white font-bold mb-2">{title}</div>
            {links && Array.isArray(links) && links.length > 0 && (
              <ul class="text-lg">
                {links.map(({ text, href, ariaLabel }) => (
                  <li class="mb-2">
                    <a
                      class="text-muted hover:text-gray-700 hover:underline dark:text-white transition duration-150 ease-in-out"
                      href={href}
                      aria-label={ariaLabel}
                    >
                      <Fragment set:html={text} />
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))
      } -->
      <div class="col-span-12 lg:col-span-8 mx-auto max-w-full">
        <div
          class="mb-2 flex flex-row justify-center gap-4 sm:gap-14 flex-wrap"
        >
          {
            links.map((item) => (
              <Fragment key={item?.text}>
                <a href={item?.href} class="font-normal text-lg">
                  {item?.text}
                </a>
              </Fragment>
            ))
          }
        </div>
      </div>
    </div>
    <div class="md:flex md:items-center md:justify-between py-6 md:py-8">
      {
        socialLinks?.length ? (
          <ul class="flex mb-4 md:order-1 -ml-2 md:ml-4 md:mb-0 rtl:ml-0 rtl:-mr-2 rtl:md:ml-0 rtl:md:mr-4">
            {socialLinks.map(({ ariaLabel, href, text, icon }) => (
              <li>
                <a
                  class="text-muted dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-lg p-2.5 inline-flex items-center"
                  aria-label={ariaLabel}
                  href={href}
                >
                  {icon && <Icon name={icon} class="w-5 h-5" />}
                  <Fragment set:html={text} />
                </a>
              </li>
            ))}
          </ul>
        ) : (
          ""
        )
      }

      <div class="text-lg mr-4 dark:text-muted">
        <Fragment set:html={footNote} />
      </div>
    </div>
  </div>
</footer>
